name: Build and Deploy

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  

    - name: Set up Node.js
      uses: actions/setup-node@v3  
      with:
        node-version: '20'  

    - name: Install dependencies
      run: npm install

    - name: Print SENTRY_AUTH_TOKEN
      run: echo $SENTRY_AUTH_TOKEN
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    - name: Set release version
      id: release
      run: |
        # Fetch all tags to ensure we can use git describe
        git fetch --tags
        # Set the release version based on the latest tag
        echo "RELEASE_VERSION=$(git describe --tags)" >> $GITHUB_ENV

    - name: Upload source maps to Sentry
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        npx sentry-cli releases new ${{ env.RELEASE_VERSION }}
        npx sentry-cli releases files ${{ env.RELEASE_VERSION }} upload-sourcemaps ./dist/frontend-app --url-prefix '~/'
        npx sentry-cli releases finalize ${{ env.RELEASE_VERSION }}

    - name: Build Angular app
      run: npm run build




    - name: List files in dist directory
      run: ls -l dist/frontend-app/browser

    - name: Copy build files and Dockerfile via SSH
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "dist/frontend-app/browser/*"
        target: "~/angular-app/"

    - name: Copy Dockerfile via SSH
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "Dockerfile"
        target: "~/angular-app/"

    - name: Copy nginx.conf via SSH
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "nginx.conf"
        target: "~/angular-app/"

    - name: Execute remote commands via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/angular-app/
          docker build -t angular-app .
          docker stop mini_app_FE || true
          docker rm mini_app_FE || true
          docker run -d --name mini_app_FE --network proxymanager_default --log-driver=json-file --log-opt max-size=10m --log-opt max-file=5 angular-app
